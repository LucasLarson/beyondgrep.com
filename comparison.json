{
    "Searching": {
        "Ignore case": {
            "ack,ag,git,grep,rgk": "-i, --ignore-case"
        },
        "Smart case": {
            "ack, ag, rg": "-S, --smart-case"
        },
        "Case-sensitive search": {
            "ack": "-I"
        },
        "Invert match": {
            "ack,ag,git,grep,rg": "-v, --invert-match",
        },
        "Literal match (escape all metacharacters)": {
            "ack": "-Q, --literal",
            "ag": "-Q, --literal"
        },
        "Specify pattern explicitly": {
            "ack": "--match"
        }
    },
    "Search output": {
        "Print specific lines": {
            "ack": "--lines"
        },
        "Print only filenames of matches": {
            "ack": "-L, --files-with-matches"
        },
        "Print only filenames of files without matches": {
            "ack": "-L, --files-with-matches"
        },
        "Output the evaluation of expr for each line": {
            "ack": "--output"
        },
        "Show only the part of a line that matched": {
            "ack": "-o"
        },
        "Print all lines, whether matching or not": {
            "ack": "--passthru"
        },
        "Stop searching in each file after NUM matches": {
            "ack": "-m, --max-count"
        },
        "Stop searching after one match of any kind": {
            "ack": "-1"
        },
        "Print the filename for each match": {
            "ack": "-H, --with-filename"
        },
        "Suppress the prefixing filename on output": {
            "ack": "-h, --no-filename"
        },
        "Show number of lines matching per file": {
            "ack": "-c, --count"
        },
        "Show the column number of the first match": {
            "ack": "--[no]column"
        },
        "Print lines of context after matches": {
            "ack,git,grep,rg": "-A, --after-context",
            "ag": "-A, --after"
        },
        "Print lines of context before matches": {
            "ack,git,grep,rg": "-B, --before-context",
            "ag": "-B, --before"
        },
        "Print lines of context before and after matches": {
            "ack,ag,git,grep,rg": "-C, --context"
        },
        "Print null byte as separator between filenames": {
            "ack": "--print0"
        },
        "Suppress error messages about nonexistent or unreadable files": {
            "ack,grep": "-s"
        }
    },
    "File presentation": {
        "Pipe output through a pager or other command": {
            "ack": "--pager=COMMAND"
        },
        "Do not send output through a pager.  Cancels any setting in ~/.ackrc, ACK_PAGER or ACK_PAGER_COLOR.": {
            "ack": "--nopager"
        },
        "Print a filename heading above each file's results.": {
            "ack": "--[no]heading"
        },
        "Print a break between results from different files.": {
            "ack": "--[no]break"
        },
        "Group together all matches in a file": {
            "ack": "--[no]group"
        },
        "Separate match output with blank lines unless they are on adjacent lines.": {
            "ack": "--[no]proximate"
        },
        "Highlight the matching text": {
            "ack": "--[no]color"
        },
        "Set COLOR": {
            "ack": "--color-colno=COLOR"
        },
        "Set the color for filenames, matches, line and column numbers.": {
            "ack": "--color-lineno=COLOR"
        },
        "Flush output immediately, even when ack is used non-interactively": {
            "ack": "--flush"
        }
    },
    "File finding": {
        "Only print the files selected, without searching.  The PATTERN must not be specified.": {
            "ack": "-f"
        },
        "Same as -f, but only select files matching PATTERN.": {
            "ack": "-g"
        },
        "Sort the found files lexically.": {
            "ack": "--sort-files"
        },
        "Show which types each file has.": {
            "ack": "--show-types"
        },
        "Read the list of files to search from FILE.": {
            "ack": "--files-from=FILE"
        },
        "Read the list of files to search from STDIN.": {
            "ack": "-x"
        }
    },
    "File inclusion/exclusion": {
        "Add/remove directory from list of ignored dirs": {
            "ack": "--[no]ignore-dir=name"
        },
        "Synonym for ignore-dir": {
            "ack": "--[no]ignore-directory=name"
        },
        "Add filter for ignoring files.": {
            "ack": "--ignore-file=FILTER:ARGS"
        },
        "Recurse into subdirectories": {
            "ack": "-r, -R, --recurse"
        },
        "No descending into subdirectories": {
            "ack": "-n, --no-recurse"
        },
        "Follow symlinks.  Default is off.": {
            "ack": "--[no]follow"
        },
        "Include only files of types that ack recognizes.": {
            "ack": "-k, --known-types"
        },
        "Include only files of a given type": {
            "ack": "--type=X"
        },
        "Exclude files of a given type": {
            "ack": "--type=noX"
        }
    },
    "File type specification": {
        "Create a filetype, replacing the previous specs": {
            "ack": "--type-set=TYPE:FILTER:ARGS"
        },
        "Add specifications to an existing filetype": {
            "ack": "--type-add=TYPE:FILTER:ARGS"
        },
        "Remove a file type": {
            "ack": "--type-del=TYPE"
        },
        "Display all known types": {
            "ack": "--help-types"
        }
    },
    "Miscellaneous": {
        "Ignore environment variables and global configuration files.": {
            "ack": "--env"
        },
        "Specify a configuration file to use": {
            "ack": "--ackrc=filename"
        },
        "Ignore default definitions included with ack.": {
            "ack": "--ignore-ack-defaults"
        },
        "Outputs a default ackrc for your customization to standard output.": {
            "ack": "--create-ackrc"
        },
        "Dump information on which options are loaded": {
            "ack": "--dump"
        },
        "Treat standard input as a pipe": {
            "ack": "--[no]filter"
        }
    }
}
